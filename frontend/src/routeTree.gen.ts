/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as IndexImport } from './routes/index'
import { Route as BuylistsIndexImport } from './routes/buylists/index'
import { Route as BuylistsBuylistIdImport } from './routes/buylists/$buylistId'
import { Route as BuylistsBuylistIdEditImport } from './routes/buylists/$buylistId/edit'
import { Route as BuylistsBuylistIdCheckoutImport } from './routes/buylists/$buylistId/checkout'
import { Route as BuylistsBuylistIdCardsCardIdImport } from './routes/buylists/$buylistId/cards.$cardId'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BuylistsIndexRoute = BuylistsIndexImport.update({
  id: '/buylists/',
  path: '/buylists/',
  getParentRoute: () => rootRoute,
} as any)

const BuylistsBuylistIdRoute = BuylistsBuylistIdImport.update({
  id: '/buylists/$buylistId',
  path: '/buylists/$buylistId',
  getParentRoute: () => rootRoute,
} as any)

const BuylistsBuylistIdEditRoute = BuylistsBuylistIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => BuylistsBuylistIdRoute,
} as any)

const BuylistsBuylistIdCheckoutRoute = BuylistsBuylistIdCheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => BuylistsBuylistIdRoute,
} as any)

const BuylistsBuylistIdCardsCardIdRoute =
  BuylistsBuylistIdCardsCardIdImport.update({
    id: '/cards/$cardId',
    path: '/cards/$cardId',
    getParentRoute: () => BuylistsBuylistIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/buylists/$buylistId': {
      id: '/buylists/$buylistId'
      path: '/buylists/$buylistId'
      fullPath: '/buylists/$buylistId'
      preLoaderRoute: typeof BuylistsBuylistIdImport
      parentRoute: typeof rootRoute
    }
    '/buylists/': {
      id: '/buylists/'
      path: '/buylists'
      fullPath: '/buylists'
      preLoaderRoute: typeof BuylistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/buylists/$buylistId/checkout': {
      id: '/buylists/$buylistId/checkout'
      path: '/checkout'
      fullPath: '/buylists/$buylistId/checkout'
      preLoaderRoute: typeof BuylistsBuylistIdCheckoutImport
      parentRoute: typeof BuylistsBuylistIdImport
    }
    '/buylists/$buylistId/edit': {
      id: '/buylists/$buylistId/edit'
      path: '/edit'
      fullPath: '/buylists/$buylistId/edit'
      preLoaderRoute: typeof BuylistsBuylistIdEditImport
      parentRoute: typeof BuylistsBuylistIdImport
    }
    '/buylists/$buylistId/cards/$cardId': {
      id: '/buylists/$buylistId/cards/$cardId'
      path: '/cards/$cardId'
      fullPath: '/buylists/$buylistId/cards/$cardId'
      preLoaderRoute: typeof BuylistsBuylistIdCardsCardIdImport
      parentRoute: typeof BuylistsBuylistIdImport
    }
  }
}

// Create and export the route tree

interface BuylistsBuylistIdRouteChildren {
  BuylistsBuylistIdCheckoutRoute: typeof BuylistsBuylistIdCheckoutRoute
  BuylistsBuylistIdEditRoute: typeof BuylistsBuylistIdEditRoute
  BuylistsBuylistIdCardsCardIdRoute: typeof BuylistsBuylistIdCardsCardIdRoute
}

const BuylistsBuylistIdRouteChildren: BuylistsBuylistIdRouteChildren = {
  BuylistsBuylistIdCheckoutRoute: BuylistsBuylistIdCheckoutRoute,
  BuylistsBuylistIdEditRoute: BuylistsBuylistIdEditRoute,
  BuylistsBuylistIdCardsCardIdRoute: BuylistsBuylistIdCardsCardIdRoute,
}

const BuylistsBuylistIdRouteWithChildren =
  BuylistsBuylistIdRoute._addFileChildren(BuylistsBuylistIdRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/buylists/$buylistId': typeof BuylistsBuylistIdRouteWithChildren
  '/buylists': typeof BuylistsIndexRoute
  '/buylists/$buylistId/checkout': typeof BuylistsBuylistIdCheckoutRoute
  '/buylists/$buylistId/edit': typeof BuylistsBuylistIdEditRoute
  '/buylists/$buylistId/cards/$cardId': typeof BuylistsBuylistIdCardsCardIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/buylists/$buylistId': typeof BuylistsBuylistIdRouteWithChildren
  '/buylists': typeof BuylistsIndexRoute
  '/buylists/$buylistId/checkout': typeof BuylistsBuylistIdCheckoutRoute
  '/buylists/$buylistId/edit': typeof BuylistsBuylistIdEditRoute
  '/buylists/$buylistId/cards/$cardId': typeof BuylistsBuylistIdCardsCardIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/search': typeof SearchRoute
  '/buylists/$buylistId': typeof BuylistsBuylistIdRouteWithChildren
  '/buylists/': typeof BuylistsIndexRoute
  '/buylists/$buylistId/checkout': typeof BuylistsBuylistIdCheckoutRoute
  '/buylists/$buylistId/edit': typeof BuylistsBuylistIdEditRoute
  '/buylists/$buylistId/cards/$cardId': typeof BuylistsBuylistIdCardsCardIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/search'
    | '/buylists/$buylistId'
    | '/buylists'
    | '/buylists/$buylistId/checkout'
    | '/buylists/$buylistId/edit'
    | '/buylists/$buylistId/cards/$cardId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/search'
    | '/buylists/$buylistId'
    | '/buylists'
    | '/buylists/$buylistId/checkout'
    | '/buylists/$buylistId/edit'
    | '/buylists/$buylistId/cards/$cardId'
  id:
    | '__root__'
    | '/'
    | '/search'
    | '/buylists/$buylistId'
    | '/buylists/'
    | '/buylists/$buylistId/checkout'
    | '/buylists/$buylistId/edit'
    | '/buylists/$buylistId/cards/$cardId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SearchRoute: typeof SearchRoute
  BuylistsBuylistIdRoute: typeof BuylistsBuylistIdRouteWithChildren
  BuylistsIndexRoute: typeof BuylistsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SearchRoute: SearchRoute,
  BuylistsBuylistIdRoute: BuylistsBuylistIdRouteWithChildren,
  BuylistsIndexRoute: BuylistsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/search",
        "/buylists/$buylistId",
        "/buylists/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/buylists/$buylistId": {
      "filePath": "buylists/$buylistId.tsx",
      "children": [
        "/buylists/$buylistId/checkout",
        "/buylists/$buylistId/edit",
        "/buylists/$buylistId/cards/$cardId"
      ]
    },
    "/buylists/": {
      "filePath": "buylists/index.tsx"
    },
    "/buylists/$buylistId/checkout": {
      "filePath": "buylists/$buylistId/checkout.tsx",
      "parent": "/buylists/$buylistId"
    },
    "/buylists/$buylistId/edit": {
      "filePath": "buylists/$buylistId/edit.tsx",
      "parent": "/buylists/$buylistId"
    },
    "/buylists/$buylistId/cards/$cardId": {
      "filePath": "buylists/$buylistId/cards.$cardId.tsx",
      "parent": "/buylists/$buylistId"
    }
  }
}
ROUTE_MANIFEST_END */
